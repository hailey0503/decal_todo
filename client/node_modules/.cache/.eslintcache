[{"/Users/haileythegooner/Desktop/final_makeup/client/src/index.js":"1","/Users/haileythegooner/Desktop/final_makeup/client/src/App.js":"2","/Users/haileythegooner/Desktop/final_makeup/client/src/reportWebVitals.js":"3"},{"size":500,"mtime":1639173286937,"results":"4","hashOfConfig":"5"},{"size":2734,"mtime":1639173339119,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1639173286938,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"vxyoe6",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/haileythegooner/Desktop/final_makeup/client/src/index.js",[],["16","17"],"/Users/haileythegooner/Desktop/final_makeup/client/src/App.js",["18"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// A todo app where the user can type in a todo and it will be added to the list\n// of todos. The user can also edit and remove a todo from the list.\nfunction App() {\n\t// TODOs: create two states here.\n  // The state of the app is stored in the todos array.\n\t// The state of the input value should also be stored in a state.\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [itemInput, setItemInput] = useState('');\n\n  useEffect(() => {\n    load()\n  }, [])\n\n\n  function load() {\n    fetch(\"http://localhost:3700/api/list\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result.tasks)\n          setIsLoaded(true);\n          setTasks(result.tasks);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }\n  function setItem() {\n    return fetch('http://localhost:3700/api/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ task : itemInput })\n    })\n      .then(data => data.json())\n      .then(()=>{load()})\n   }\n\n   function deleteItem(item) {\n    return fetch('http://localhost:3700/api/delete', {\n      method:'DELETE',\n      headers: {\n        'Content-Type':'application/json',\n      },\n      body: JSON.stringify({task : item})\n      })\n    .then(()=>{load()})\n   }\n\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else {\n    return (\n      \n      <div className=\"TODOContainer\">\n        <div className=\"TODOInput\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a new todo\"\n            onChange={event => setItemInput(event.target.value)} value={itemInput}\n          />\n          <button onClick= {setItem}>\n            Add\n          </button>\n        </div>\n        <div className=\"TODOList\">\n          {/* TODO: consider mapping the todo array here into a list\n                    of TODO items */}\n          {tasks.map(item => (\n            <div className=\"TODOItem\" >        \n                  <div className=\"TODOItemText\">\n                    <p>{item}</p> \n                  </div>\n                  <div className=\"TODOItemDelete\">\n                    <button className=\"TODOItemButton\" onClick = {()  => deleteItem(item)}>Remove</button>\n                  </div>\n            </div>\n           ))}\n          </div>\n        </div>\n    );\n  } \n}\n\nexport default App;\n\n\n","/Users/haileythegooner/Desktop/final_makeup/client/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":11,"column":10,"nodeType":"25","messageId":"26","endLine":11,"endColumn":18},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]