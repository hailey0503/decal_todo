{"ast":null,"code":"var _jsxFileName = \"/Users/haileythegooner/Desktop/final_makeup/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\"; // A todo app where the user can type in a todo and it will be added to the list\n// of todos. The user can also edit and remove a todo from the list.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODOs: create two states here.\n  // The state of the app is stored in the todos array.\n  // The state of the input value should also be stored in a state.\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [itemInput, setItemInput] = useState('');\n  useEffect(() => {\n    load();\n  }, []);\n\n  function load() {\n    fetch(\"http://localhost:3700/api/list\").then(res => res.json()).then(result => {\n      console.log(result.tasks);\n      setIsLoaded(true);\n      setTasks(result.tasks);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }\n\n  function setItem() {\n    return fetch('http://localhost:3700/api/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task: itemInput\n      })\n    }).then(data => data.json()).then(() => {\n      load();\n    });\n  }\n\n  function deleteItem(item) {\n    return fetch('http://localhost:3700/api/delete', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task: item\n      })\n    }).then(() => {\n      load();\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TODOContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TODOInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a new todo\",\n          onChange: event => setItemInput(event.target.value),\n          value: itemInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setItem,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TODOList\",\n        children: tasks.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TODOItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TODOItemText\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TODOItemDelete\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"TODOItemButton\",\n              onClick: () => deleteItem(item),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"Eok/LRawB9iw7hrnty/40DvFzQU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/haileythegooner/Desktop/final_makeup/client/src/App.js"],"names":["React","useEffect","useState","App","error","setError","isLoaded","setIsLoaded","tasks","setTasks","itemInput","setItemInput","load","fetch","then","res","json","result","console","log","setItem","method","headers","body","JSON","stringify","task","data","deleteItem","item","message","event","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// A todo app where the user can type in a todo and it will be added to the list\n// of todos. The user can also edit and remove a todo from the list.\nfunction App() {\n\t// TODOs: create two states here.\n  // The state of the app is stored in the todos array.\n\t// The state of the input value should also be stored in a state.\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [itemInput, setItemInput] = useState('');\n\n  useEffect(() => {\n    load()\n  }, [])\n\n\n  function load() {\n    fetch(\"http://localhost:3700/api/list\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result.tasks)\n          setIsLoaded(true);\n          setTasks(result.tasks);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }\n  function setItem() {\n    return fetch('http://localhost:3700/api/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ task : itemInput })\n    })\n      .then(data => data.json())\n      .then(()=>{load()})\n   }\n\n   function deleteItem(item) {\n    return fetch('http://localhost:3700/api/delete', {\n      method:'DELETE',\n      headers: {\n        'Content-Type':'application/json',\n      },\n      body: JSON.stringify({task : item})\n      })\n    .then(()=>{load()})\n   }\n\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else {\n    return (\n      \n      <div className=\"TODOContainer\">\n        <div className=\"TODOInput\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a new todo\"\n            onChange={event => setItemInput(event.target.value)} value={itemInput}\n          />\n          <button onClick= {setItem}>\n            Add\n          </button>\n        </div>\n        <div className=\"TODOList\">\n          {/* TODO: consider mapping the todo array here into a list\n                    of TODO items */}\n          {tasks.map(item => (\n            <div className=\"TODOItem\" >        \n                  <div className=\"TODOItemText\">\n                    <p>{item}</p> \n                  </div>\n                  <div className=\"TODOItemDelete\">\n                    <button className=\"TODOItemButton\" onClick = {()  => deleteItem(item)}>Remove</button>\n                  </div>\n            </div>\n           ))}\n          </div>\n        </div>\n    );\n  } \n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}